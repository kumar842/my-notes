Source: https://www.youtube.com/playlist?list=PLqq-6Pq4lTTbx8p2oCgcAQGQyqN8XeA1x

https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html


1. what is Spring boot?
 Spring boot makes it easy to create stand-alone, production-grade Spring based Appplciations that can "just run".

 .. create .. Spring based Applications...
 stand-alone
 production-grade
 just-run


2. What is Spring?
   - Whole Application framework
 	  - not just dependency injection
 	  - let's build entriprise java apps by providing the templates..
 
   - Programming and configuration model
 	  - u ll focus on building business services and u will let spring to handle the common concerns.. like db connection, running queries, handling http request, mvc layer... 
 
   - Infrastructure support


3. Problems with Spring
   - Huge framework
   - Multiple setup steps
   - Multiple configuration steps
   - Multiple bulid and deploy steps
 
 Can we abstract these steps?

4. Enter Spring Boot
    - Opinionated
    - Convention over configuration
    - Stand alone
    - Production ready


5. Starting Spring Boot
    - Sets up default configuration
    - Stars Spring application context
    - Performs class path scan
    - Starts tomcat server


6. What's happening here.
  - Bill of materials
  - Embedded Tomcat Server
      - convenience
      - Servlet container config is now application config
      - Standalone application
      - Useful for microservices architecture


7. Spring MVC Controller
  - Image - video 15

  Resources:
    Topic, Course, Lesson
    A topic can have multiple courses and a course can consist of multiple lessons

      Topics:
        GET      /topics      Gets all topics
        GET      /topics/id   Get the topic
        POST     /topics      Create new topic
        PUT      /topics/id   Updates the topic
        DELETE   /topics/id   Deletes the topic

  Business Services:
    TopicService

8. Starting a Spring Boot App
  - Spring Initalizr
  - Spring Boot CLI
  - STS IDE

9. Configuration
    - configure the port (default 8080) of servlet container

10. Sring Data JPA: The Data Tier
    - JPA -> Java Persistence API
              - ORM - let's u to map entity classes tables
                  - Relational Database ..jdbc..named queries..  

    - Spring Data JPA
        - is more than just a general JPA




org.springframework.boot.SpringApplication

Class that can be used to bootstrap and launch a Spring application from a Java main method. By default class will perform the following steps to bootstrap your application: 
• Create an appropriate ApplicationContext instance (depending on your classpath)
• Register a CommandLinePropertySource to expose command line arguments as Spring properties
• Refresh the application context, loading all singleton beans
• Trigger any CommandLineRunner beans

In most circumstances the static run(Class, String []) method can be called directly from your main method to bootstrap your application:  @Configuration
 @EnableAutoConfiguration
 public class MyApplication  {

   // ... Bean definitions

   public static void main(String[] args) throws Exception {
     SpringApplication.run(MyApplication.class, args);
   }
 }
 

For more advanced configuration a SpringApplication instance can be created and customized before being run: 
 public static void main(String[] args) throws Exception {
   SpringApplication application = new SpringApplication(MyApplication.class);
   // ... customize application settings here
   application.run(args)
 }


 
SpringApplications can read beans from a variety of different sources. It is generally recommended that a single @Configuration class is used to bootstrap your application, however, you may also set sources from: •The fully qualified class name to be loaded by AnnotatedBeanDefinitionReader
•The location of an XML resource to be loaded by XmlBeanDefinitionReader, or a groovy script to be loaded by GroovyBeanDefinitionReader
•The name of a package to be scanned by ClassPathBeanDefinitionScanner
Configuration properties are also bound to the SpringApplication. This makes it possible to set SpringApplication properties dynamically, like additional sources ("spring.main.sources" - a CSV list) the flag to indicate a web environment ("spring.main.web-application-type=none") or the flag to switch off the banner ("spring.main.banner-mode=off").Author:Phillip WebbDave SyerAndy WilkinsonChristian DupuisStephane NicollJeremy RickardCraig BurkeMichael SimonsMadhura BhaveBrian ClozelEthan RubinsonSee Also:run(Class, String [])run(Class [], String [])SpringApplication(Class)   

















